%script{:defer => "defer", type: "text/javascript", src: "/js/bootstrap.min.js"}

%div{:class=>"modal fade", :id=>"selectLanguage"}
  %div{:class=>"modal-dialog", :width=>"500px"}
    %div{:class=>"modal-content"}
      %div{:class=>"modal-header"}
        %button{:type=>"button", :class=>"close", :"data-dismiss"=>"modal"}
          %span{:"aria-hidden"=>"true"} &times;
          %span{:class=>"sr-only"} Close
        %img.lazyload{:'data-src'=>avatar_image("flag sphere"), :style=>"width: 256px; height: 256px;"}
      %div{:class=>"modal-body"}
        %h4{:class=>"modal-title"}= I18n.t('select_language')
        =view :language
      %div{:class=>"modal-footer"}
        %button{:type=>"button", :class=>"btn btn-primary", :"data-dismiss"=>"modal"}= I18n.t('submit')  

:css
  .modal{
    text-align: center;
  }

:javascript
  function setCookie(key, value, days) {
    var expires = new Date();
    expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
    document.cookie = key + '=' + value + ';expires=' + expires.toUTCString();
  }

  function getCookie(key) {
    var keyValue = document.cookie.match('(^|;) ?' + key + '=([^;]*)(;|$)');
    return keyValue ? keyValue[2] : null;
  }

  /**
   * A focus trap is a common accessibility feature that ensures that the keyboard focus remains
   * within a certain container (like a modal dialog), and does not move to other parts of the 
   * page.
  */
  function focusTrap(modalId) {
    return () => {
      var focusableEls = $(modalId).find('a[href], button, textarea, input:not([disabled]), select');
      var firstFocusableEl = focusableEls.first()[0];
      var lastFocusableEl = focusableEls.last()[0];
      var KEYCODE_TAB = 9;

      firstFocusableEl.focus();

      $(modalId).on('keydown', function(e) {
        var isTabPressed = (e.key === 'Tab' || e.keyCode === KEYCODE_TAB);

        if (!isTabPressed) { 
          return; 
        }

        if (e.shiftKey) { // if shift key pressed for shift + tab combination
          if (document.activeElement === firstFocusableEl) {
            lastFocusableEl.focus();
            e.preventDefault();
          }
        } else { // if tab key is pressed
          if (document.activeElement === lastFocusableEl) { // if focused has reached to last item then focus first item after tab
            firstFocusableEl.focus();
            e.preventDefault();
          }
        }
      });
    }
  }

  $( document ).ready(function() {
    already_shown = !!getCookie('_loc_notice');
    if(!already_shown) {
      $.getJSON( "/v2/client-location", function( data ) {
        country_code = data['country_code'];
        if(country_code != 'US') {
          $('#selectLanguage').modal('show');
          $('#selectLanguage').on('shown.bs.modal', focusTrap('#selectLanguage'));
        }
      });
      setCookie('_loc_notice', '1', 365)
    }
  });
