# These are commands that maintain the software in the container.

# All of the install commands extend the isolated 'web-base' which
# means they run without having to spin up a database, etc.
# If any command depends on a service, it needs to specify that itself.

include:
  - path: ./docker-compose.localstack.yml
  - path: ./docker-compose.commands.yml

services:
  # This just installs / updates rbenv / Ruby inside the web instance
  install-rbenv:
    extends:
      file: docker-compose.dashboard.yml
      service: web-base
    hostname: install-rbenv
    volumes:
      - rbenv:/home/cdodev/.rbenv
      - ../../.ruby-version:/app/src/.ruby-version
      - .:/app/src # This is not the application source code!
    command: /bin/bash -l -c "./install-local-rbenv.sh"

  # This just installs / updates nvm / Node / nvm inside the web instance
  install-nvm:
    extends:
      file: docker-compose.dashboard.yml
      service: web-base
    hostname: install-nvm
    volumes:
      - nvm:/home/cdodev/.nvm
      - ../../apps/package.json:/app/src/apps/package.json
      - .:/app/src # This is not the application source code!
    command: /bin/bash -l -c "./install-local-nvm.sh"

  # This just installs the Ruby gems, in case they have changed
  install-gems:
    extends:
      file: docker-compose.dashboard.yml
      service: web-base
    volumes:
      - rbenv:/home/cdodev/.rbenv
      - ../..:/app/src
    command: /bin/bash -l -c "bundle install"

  # Installs the node/npm/js libraries
  install-js:
    extends:
      file: docker-compose.dashboard.yml
      service: web-base
    volumes:
      - nvm:/home/cdodev/.nvm
      - ../../docker:/app/src/docker
      - ../../apps:/app/src/apps
    working_dir: /app/src/apps
    command: /bin/bash -l -c '../docker/developers/run.sh yarn install'

  install-localstack:
    extends:
      file: docker-compose.dashboard.yml
      service: web-base
    depends_on:
      localstack:
        condition: service_healthy
      minio:
        condition: service_started
    environment:
      - AWS_ACCESS_KEY_ID=local-development
      - AWS_SECRET_ACCESS_KEY=allstudents
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_LOCALSTACK_ENDPOINT_URL=http://localstack:4566
      - AWS_S3_ENDPOINT_URL=http://minio:9000
    entrypoint: /bin/bash -c
    volumes:
      - ../..:/app/src
      - ./locals-container.yml:/app/src/locals.yml
    working_dir: /app/src/docker/developers
    command: "./install-localstack.sh"
    networks:
      cdo_network_test:
      cdo_network:

  # Run the 'rake install' step with/without AWS
  install: &install-base
    extends:
      file: docker-compose.dashboard.yml
      service: web
    volumes:
      - ./locals-container.yml:/app/src/locals.yml
    environment: &install-environment
      AFTER: "rm -f .git/hooks/pre-commit .git/hooks/post-checkout .git/hooks/post-merge; ln -s ../../docker/developers/hooks/pre-commit .git/hooks/pre-commit; ln -s ../../docker/developers/hooks/post-merge .git/hooks/post-merge; ln -s ../../docker/developers/hooks/post-checkout .git/hooks/post-checkout"
    command: /bin/bash -l -c './docker/developers/run.sh bundle exec rake install'

  install-aws: &install-aws-base
    extends:
      file: docker-compose.dashboard.yml
      service: web-aws
    volumes:
      - ./locals-container.yml:/app/src/locals.yml
    environment:
      <<: *install-environment
    command: /bin/bash -l -c './docker/developers/run.sh bundle exec rake install'

  install-low-memory:
    <<: *install-base
    environment:
      # Level seeding batch size to be more appropriate for lower-memory situations
      CDO_LEVEL_SEED_BATCH_SIZE: 500

  install-all-base:
    extends:
      file: docker-compose.dashboard.yml
      service: web-base
    depends_on:
      install-localstack:
        condition: service_completed_successfully
      install-rbenv:
        condition: service_completed_successfully
      install-nvm:
        condition: service_completed_successfully
      install-gems:
        condition: service_completed_successfully
      install-js:
        condition: service_completed_successfully
    entrypoint: /bin/bash -c
    command: "echo 'Installed libraries and environment dependencies.'"

  # Performs all install steps for an initial setup
  install-all:
    <<: *install-base
    depends_on:
      install-all-base:
        condition: service_completed_successfully
