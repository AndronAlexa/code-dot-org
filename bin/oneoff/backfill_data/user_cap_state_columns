#!/usr/bin/env ruby

# This script migrates CAP data from properties to separate indexed columns.

require 'ruby-progressbar'
require_relative '../../../dashboard/config/environment'

max_id = User.maximum(:id)
batch_size = 100_000
total_updated = 0

progress_bar_title = proc {|num_updates = 0| "Processed[%c/%C]: |%W| Updated: #{total_updated += num_updates} %a"}
progress_bar = ProgressBar.create(total: max_id, format: progress_bar_title.call)

(1..max_id).step(batch_size) do |start_id|
  finish_id = [start_id + batch_size.pred, max_id].min

  User.select(:id).where(cap_state: nil).where("properties->>'$.child_account_compliance_state' IS NOT NULL").find_in_batches(start: start_id, finish: finish_id) do |users_batch|
    User.where(id: users_batch).update_all <<~SQL.strip
      cap_state = IF(properties->>'$.child_account_compliance_state' = 's', 'l', properties->>'$.child_account_compliance_state'),
      cap_state_date = CAST(properties->>'$.child_account_compliance_state_last_updated' AS DATETIME)
    SQL

    progress_bar.format progress_bar_title.call(users_batch.size)
  end

  progress_bar.progress = finish_id
end

progress_bar.finish
